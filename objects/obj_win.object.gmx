<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
my_name = "Player" + string(irandom_range(1, 999));
the_name="";
strngo[0] = "Congratulations! You are the winner of "+string(GAME_TITLE) +"!";

ini_open("save.ini");
total_wins = ini_read_real("achievement", "wins", 0);
ini_close();
scr_save_to_ini_real("achievement", "wins", total_wins+1);
switch(total_wins+1){
case 1:
strngo[1] = "It's your first win, and for that you'll recieve bonus character in your gameplay!";
strngo[2] = "Crazy Egg now will appear in your game";
break;
case 2:
strngo[1] = "What a second win! You surely deserve a new  bonus gameplay character!";
strngo[2] = "Space Sat now will appear in your game";
break;
case 3:
strngo[1] = "You're still on fire after your third win! Now you are the Heavyweight Champion Of The " + string(GAME_TITLE);
strngo[2] = "Yo-yo Ball is your reward. Check it out in your game";
break;
default:
strngo[1] = "Yet another win! You are the undeniable legend of " + string(GAME_TITLE);
strngo[2] = "";
break;
}
strngo[3] = "Press 'escape' to continue";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard input
if(highscore_value(10)&lt;score){
letters_count = 0;
var key_space = keyboard_check_released(vk_space);
var key_q = keyboard_check_released(ord("Q"));
var key_w = keyboard_check_released(ord("W"));
var key_e = keyboard_check_released(ord("E"));
var key_r = keyboard_check_released(ord("R"));
var key_t = keyboard_check_released(ord("T"));
var key_y = keyboard_check_released(ord("Y"));
var key_u = keyboard_check_released(ord("U"));
var key_i = keyboard_check_released(ord("I"));
var key_o = keyboard_check_released(ord("O"));
var key_p = keyboard_check_released(ord("P"));
///////
var key_a = keyboard_check_released(ord("A"));
var key_s = keyboard_check_released(ord("S"));
var key_d = keyboard_check_released(ord("D"));
var key_f = keyboard_check_released(ord("F"));
var key_g = keyboard_check_released(ord("G"));
var key_h = keyboard_check_released(ord("H"));
var key_j = keyboard_check_released(ord("J"));
var key_k = keyboard_check_released(ord("K"));
var key_l = keyboard_check_released(ord("L"));
/////
var key_z = keyboard_check_released(ord("Z"));
var key_x = keyboard_check_released(ord("X"));
var key_c = keyboard_check_released(ord("C"));
var key_v = keyboard_check_released(ord("V"));
var key_b = keyboard_check_released(ord("B"));
var key_n = keyboard_check_released(ord("N"));
var key_m = keyboard_check_released(ord("M"));
////
var key_backspace = max(0, keyboard_check_released(vk_backspace), keyboard_check_released(vk_left)) ;



if(
key_q ||
key_w ||
key_e ||
key_r ||
key_t ||
key_y ||
key_u ||
key_i ||
key_o ||
key_p ||
key_a ||
key_s ||
key_d ||
key_f ||
key_g ||
key_h ||
key_j ||
key_k ||
key_l ||
key_z ||
key_x ||
key_c ||
key_v ||
key_b ||
key_n ||
key_m ||
key_backspace ||
key_space){
if(key_space){
the_name+= " ";

}
if(key_q){
the_name+= "Q";

}
if(key_w){
the_name+= "W";

}
if(key_e){
the_name+= "E";

}
if(key_r){
the_name+= "R";

}
if(key_t){
the_name+= "T";

}
if(key_y){
the_name+= "Y";

}
if(key_u){
the_name+= "U";

}
if(key_i){
the_name+= "I";

}
if(key_o){
the_name+= "O";

}
if(key_p){
the_name+= "P";

}
if(key_a){
the_name+= "A";

}
if(key_s){
the_name+= "S";

}
if(key_d){
the_name+= "D";

}
if(key_f){
the_name+= "F";

}
if(key_g){
the_name+= "G";

}
if(key_h){
the_name+= "H";

}
if(key_j){
the_name+= "J";

}
if(key_k){
the_name+= "K";

}
if(key_l){
the_name+= "L";

}
if(key_z){
the_name+= "Z";

}
if(key_x){
the_name+= "X";

}
if(key_c){
the_name+= "C";

}
if(key_v){
the_name+= "V";

}
if(key_b){
the_name+= "B";

}
if(key_n){
the_name+= "N";

}
if(key_m){
the_name+= "M";

}
////////////////////
if(key_backspace){
//CUT
new_name =  string_delete(the_name, (string_length(the_name)), 1);
show_debug_message("Backspace pressed: " + string(new_name));
the_name = new_name;
}

}

}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_menu);

for(i=0; i&lt;array_length_1d(strngo); i++){

draw_text_ext(x, y+(100*i), strngo[i], 20, room_width/3);
}

draw_set_colour(c_white);
draw_text(x, 100, string("Print your name and press Enter"));
if(string_length(the_name)&gt;0){

draw_name = the_name;

draw_set_font(fnt_name);
draw_text(x, 200, string(draw_name));
draw_set_font(fnt_info);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(audio_is_playing(snd_win)){
audio_stop_sound(snd_win);
}
room_goto(rm_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(string_length(the_name)&gt;0){

my_name = the_name;
}

highscore_add(my_name, score);
score = 0;
room_goto(rm_menu);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
